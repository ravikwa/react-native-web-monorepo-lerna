apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.kredent.stockedgeclub"

        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
       pickFirst '**/armeabi-v7a/libc++_shared.so'
       pickFirst '**/x86/libc++_shared.so'
       pickFirst '**/x86_64/libc++_shared.so'
       pickFirst '**/arm64-v8a/libc++_shared.so'
       pickFirst '**/libjsc.so'
    }
}

project.ext.react = [
    entryFile: 'index.js',
    enableHermes: true
]

dependencies {
    implementation project(':react-native-safe-area-context')
    implementation project(':react-native-vector-icons')
    implementation project(':react-native-gesture-handler')
    implementation 'org.webkit:android-jsc:+'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.airbnb.android:lottie:3.3.1'
    implementation "com.facebook.react:react-native:+"
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-alpha02'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(':liquidswipe')

    // def hermesPath = "$rootDir/../node_modules/hermes-engine/android/";
    // debugImplementation files(hermesPath + "hermes-debug.aar")
    // releaseImplementation files(hermesPath + "hermes-release.aar")
}

task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}
